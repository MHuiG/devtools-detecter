{"version":3,"file":"DevtoolsDetecter.es.js","sources":["../index.js"],"sourcesContent":["const DevtoolsDetecter = (function () {\r\n  let isOpen = false;\r\n  let isOpenForGetterHack = false;\r\n  let debug = false;\r\n  let benchmarkMaxN = 7000000;\r\n  let timingSamplingMaxN = 1000;\r\n  let timer = 500;\r\n  let TimingSamplingCtl = null;\r\n  let GetterHackCtl = null;\r\n\r\n  const Status = () => {\r\n    return isOpen || isOpenForGetterHack;\r\n  }\r\n  const listeners = [];\r\n  const RunListeners = () => {\r\n    for (const listener of listeners) {\r\n      try {\r\n        listener(Status());\r\n      } catch { }\r\n    }\r\n  }\r\n  // 屏幕打印\r\n  const Print = (msg) => {\r\n    if (debug) {\r\n      const div = document.createElement(\"div\");\r\n      div.innerHTML = `${msg}<br>`;\r\n      document.body.appendChild(div);\r\n    }\r\n  }\r\n  // Cats\r\n  const LogCat = console;\r\n  const MathCat = Math;\r\n  const Int8ArrayCat = Int8Array;\r\n  const setIntervalCat = setInterval;\r\n  const DateCat = Date;\r\n  let performanceCat = false;\r\n  if (typeof performance != \"undefined\") {\r\n    performanceCat = performance;\r\n  }\r\n  const now = () => {\r\n    if (performanceCat) {\r\n      return performanceCat.now();\r\n    } else {\r\n      return +new DateCat;\r\n    }\r\n  }\r\n\r\n  // getter hack check for IE\r\n  const div = document.createElement('div');\r\n  try {\r\n    div.__defineGetter__('id', function () {\r\n      isOpenForGetterHack = true;\r\n      Print(`**** !!!!!! [Getter Hack] DevTools detected !!!!! ****`);\r\n      RunListeners();\r\n    });\r\n  } catch {\r\n    isOpenForGetterHack = 0;\r\n  }\r\n\r\n  const GetterHack = () => {\r\n    if (isOpenForGetterHack === 0)\r\n      return;\r\n    isOpenForGetterHack = false;\r\n    LogCat.log(div);\r\n    try {\r\n      LogCat.clear();\r\n    } catch { }\r\n  }\r\n  const TimingHack = () => {\r\n    const startTime = now();\r\n    for (let check = 0; check < timingSamplingMaxN; check++) {\r\n      if (!LogCat.log) {\r\n        alert(\"Hacked!\");\r\n      }\r\n      LogCat.log(check);\r\n      try {\r\n        LogCat.clear();\r\n      } catch { }\r\n    }\r\n    return now() - startTime;\r\n  }\r\n  // 平均值\r\n  const Average = (arr) => {\r\n    let sum = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      sum += arr[i];\r\n    }\r\n    return sum / arr.length;\r\n  }\r\n  // 方差\r\n  const Variance = (arr) => {\r\n    let avg = Average(arr);\r\n    let sum = 0;\r\n    for (let i = 0; i < arr.length; i++) {\r\n      sum += MathCat.pow(arr[i] - avg, 2);\r\n    }\r\n    return sum / arr.length;\r\n  }\r\n  // 添加样本\r\n  const AddSample = (arr, item) => {\r\n    arr.push(item);\r\n    if (arr.length > 5) {\r\n      arr.shift();\r\n    }\r\n  }\r\n  // 基准\r\n  let Benchmark = () => {\r\n    const startTime = now();\r\n    const maxn = benchmarkMaxN;\r\n    const pris = new Int8ArrayCat(maxn + 1)\r\n    for (var i = 2; i <= maxn; ++i)\r\n      if (pris[i] === 0)\r\n        for (var j = i * i; j <= maxn; j += i)\r\n          pris[j] = 1;\r\n    const diff = now() - startTime;\r\n    return diff;\r\n  }\r\n  // 采样列表\r\n  const SampleList = [];\r\n  // 平均采样列表\r\n  const AverageSampleList = [];\r\n  // 方差采样列表\r\n  const VarianceSampleList = [];\r\n  // 标记\r\n  let FlagID = -1;\r\n  // 临界水平\r\n  const CriticalLevel = Benchmark();\r\n  // 平均临界水平\r\n  let AverageCriticalLevel = CriticalLevel;\r\n  // 方差临界水平\r\n  let VarianceCriticalLevel = CriticalLevel;\r\n  // 计时采样\r\n  const TimingSampling = () => {\r\n    FlagID++;\r\n    const diff = TimingHack();\r\n    AddSample(SampleList, diff);\r\n    Print(SampleList);\r\n    if (FlagID && FlagID % 5 == 0) {\r\n      const avg = Average(SampleList);\r\n      const sd = Variance(SampleList);\r\n      AddSample(AverageSampleList, avg);\r\n      AddSample(VarianceSampleList, sd);\r\n      Print(`=== Average: ${avg} Variance: ${sd} === `);\r\n      // 平均值大于临界水平 或 采样值成接近临界水平的突增趋势\r\n      if (avg > AverageCriticalLevel || (avg > AverageCriticalLevel * 0.85 && sd > VarianceCriticalLevel && Average([SampleList[0], SampleList[1], SampleList[2]]) < Average([SampleList[1], SampleList[2], SampleList[3]]) && Average([SampleList[1], SampleList[2], SampleList[3]]) < Average([SampleList[2], SampleList[3], SampleList[4]]))) {\r\n        // 检测到 DevTools\r\n        isOpen = true;\r\n        Print(`**** !!!!!! DevTools detected !!!!! ****`);\r\n      } else {\r\n        // 没有检测到 DevTools\r\n        isOpen = false;\r\n        // 微调参数水平\r\n        if (FlagID >= 25) {\r\n          AverageCriticalLevel = MathCat.min(Average(AverageSampleList) * 5, CriticalLevel);\r\n          VarianceCriticalLevel = MathCat.min(Average(VarianceSampleList) * 5, CriticalLevel);\r\n          Print(`=== AverageCriticalLevel: ${AverageCriticalLevel} VarianceCriticalLevel: ${VarianceCriticalLevel} ===`);\r\n        }\r\n      }\r\n    }\r\n    checkEruda();\r\n    RunListeners();\r\n  }\r\n  const checkEruda = () => {\r\n    if (isOpen)\r\n      return\r\n    if (typeof eruda !== 'undefined') {\r\n      if (eruda?._devTools?._isShow === true) {\r\n        isOpen = true;\r\n        Print(`**** !!!!!! [Eruda] DevTools detected !!!!! ****`);\r\n      } else {\r\n        isOpen = false;\r\n      }\r\n    }\r\n  }\r\n\r\n  class DevtoolsDetecter {\r\n    debug() {\r\n      debug = true;\r\n      Print(`ua: ${navigator.userAgent}`)\r\n      Print(`hardwareConcurrency: ${navigator.hardwareConcurrency}`)\r\n      try {\r\n        if (performance && performance.memory) {\r\n          Print(`memory used: ${performance.memory.usedJSHeapSize}`)\r\n          Print(`memory total: ${performance.memory.totalJSHeapSize}`)\r\n          Print(`memory limit: ${performance.memory.jsHeapSizeLimit}`)\r\n        }\r\n      } catch { }\r\n      Print(`Benchmark: ${CriticalLevel}`)\r\n    }\r\n    getStatus() {\r\n      return Status();\r\n    }\r\n    setBenchmarkMaxN(n) {\r\n      benchmarkMaxN = n;\r\n    }\r\n    setTimingSamplingMaxN(n) {\r\n      timingSamplingMaxN = n;\r\n    }\r\n    setBenchmark(callBack) {\r\n      Benchmark = callBack;\r\n    }\r\n    setTimer(t) {\r\n      timer = t;\r\n    }\r\n    addListener(callBack) {\r\n      listeners.push(callBack);\r\n    }\r\n    launch() {\r\n      TimingSamplingCtl = setIntervalCat(TimingSampling, timer);\r\n      GetterHackCtl = setIntervalCat(GetterHack, timer);\r\n    }\r\n    stop() {\r\n      clearInterval(TimingSamplingCtl);\r\n      clearInterval(GetterHackCtl);\r\n    }\r\n  }\r\n  return new DevtoolsDetecter();\r\n})()\r\n\r\nexport default DevtoolsDetecter;"],"names":["DevtoolsDetecter","isOpen","isOpenForGetterHack","debug","benchmarkMaxN","timingSamplingMaxN","timer","TimingSamplingCtl","GetterHackCtl","Status","listeners","RunListeners","listener","Print","msg","div","document","createElement","innerHTML","body","appendChild","LogCat","console","MathCat","Math","Int8ArrayCat","Int8Array","setIntervalCat","setInterval","DateCat","Date","performanceCat","performance","now","__defineGetter__","GetterHack","log","clear","TimingHack","startTime","check","alert","Average","arr","sum","i","length","Variance","avg","pow","AddSample","item","push","shift","Benchmark","maxn","pris","j","diff","SampleList","AverageSampleList","VarianceSampleList","FlagID","CriticalLevel","AverageCriticalLevel","VarianceCriticalLevel","TimingSampling","sd","min","checkEruda","eruda","_devTools","_isShow","navigator","userAgent","hardwareConcurrency","memory","usedJSHeapSize","totalJSHeapSize","jsHeapSizeLimit","n","callBack","t","clearInterval"],"mappings":"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"}